{"ast":null,"code":"import axios from 'axios';\nimport { GET_ERRORS, SET_CURRENT_USER } from '../constants';\nexport const loginUser = userData => dispatch => {\n  axios.post('http://localhost:5000/api/users/login', userData).then(res => {\n    const {\n      token\n    } = res.data;\n    localStorage.setItem('jwtToken', token);\n    dispatch(getCurrentUser());\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const registerUser = (userData, history) => dispatch => {\n  axios.post('http://localhost:5000/api/users/register', userData).then(res => history.push('/login')).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const getCurrentUser = () => dispatch => {\n  axios.get('http://localhost:5000/api/users').then(res => dispatch(setCurrentUser(res.data)));\n};\nexport const setCurrentUser = data => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: data\n  };\n};","map":{"version":3,"names":["axios","GET_ERRORS","SET_CURRENT_USER","loginUser","userData","dispatch","post","then","res","token","data","localStorage","setItem","getCurrentUser","catch","err","type","payload","response","registerUser","history","push","get","setCurrentUser"],"sources":["D:/twitter-clone/client/src/actions/authActions.js"],"sourcesContent":["import axios from 'axios'\r\nimport { GET_ERRORS, SET_CURRENT_USER } from '../constants'\r\n\r\nexport const loginUser = (userData) => dispatch => {\r\n\taxios.post('http://localhost:5000/api/users/login', userData)\r\n\t\t.then(res => {\r\n\t\t\tconst { token } = res.data \r\n\t\t\tlocalStorage.setItem('jwtToken', token)\r\n\t\t\tdispatch(getCurrentUser())\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_ERRORS,\r\n\t\t\t\tpayload: err.response.data\r\n\t\t\t})\r\n\t\t})\r\n}\r\n\r\nexport const registerUser = (userData, history) => dispatch => {\r\n\taxios.post('http://localhost:5000/api/users/register', userData)\r\n\t\t.then(res => history.push('/login'))\r\n\t\t.catch(err => dispatch({\r\n\t\t\ttype: GET_ERRORS,\r\n\t\t\tpayload: err.response.data\r\n\t\t}))\r\n}\r\n\r\nexport const getCurrentUser = () => dispatch => {\r\n\taxios.get('http://localhost:5000/api/users')\r\n\t\t.then(res => dispatch(setCurrentUser(res.data)))\r\n}\r\n\r\nexport const setCurrentUser = (data) => {\r\n\treturn {\r\n\t\ttype: SET_CURRENT_USER,\r\n\t\tpayload: data\r\n\t}\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,cAA7C;AAEA,OAAO,MAAMC,SAAS,GAAIC,QAAD,IAAcC,QAAQ,IAAI;EAClDL,KAAK,CAACM,IAAN,CAAW,uCAAX,EAAoDF,QAApD,EACEG,IADF,CACOC,GAAG,IAAI;IACZ,MAAM;MAAEC;IAAF,IAAYD,GAAG,CAACE,IAAtB;IACAC,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,KAAjC;IACAJ,QAAQ,CAACQ,cAAc,EAAf,CAAR;EACA,CALF,EAMEC,KANF,CAMQC,GAAG,IAAI;IACbV,QAAQ,CAAC;MACRW,IAAI,EAAEf,UADE;MAERgB,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaR;IAFd,CAAD,CAAR;EAIA,CAXF;AAYA,CAbM;AAeP,OAAO,MAAMS,YAAY,GAAG,CAACf,QAAD,EAAWgB,OAAX,KAAuBf,QAAQ,IAAI;EAC9DL,KAAK,CAACM,IAAN,CAAW,0CAAX,EAAuDF,QAAvD,EACEG,IADF,CACOC,GAAG,IAAIY,OAAO,CAACC,IAAR,CAAa,QAAb,CADd,EAEEP,KAFF,CAEQC,GAAG,IAAIV,QAAQ,CAAC;IACtBW,IAAI,EAAEf,UADgB;IAEtBgB,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaR;EAFA,CAAD,CAFvB;AAMA,CAPM;AASP,OAAO,MAAMG,cAAc,GAAG,MAAMR,QAAQ,IAAI;EAC/CL,KAAK,CAACsB,GAAN,CAAU,iCAAV,EACEf,IADF,CACOC,GAAG,IAAIH,QAAQ,CAACkB,cAAc,CAACf,GAAG,CAACE,IAAL,CAAf,CADtB;AAEA,CAHM;AAKP,OAAO,MAAMa,cAAc,GAAIb,IAAD,IAAU;EACvC,OAAO;IACNM,IAAI,EAAEd,gBADA;IAENe,OAAO,EAAEP;EAFH,CAAP;AAIA,CALM"},"metadata":{},"sourceType":"module"}