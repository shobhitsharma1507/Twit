{"ast":null,"code":"import { GET_ERRORS } from '../constants';\nimport axios from 'axios';\nexport const loginUser = userData => dispatch => {\n  axios.post('http://localhost:5000/api/users/login', userData).then(res => {\n    const {\n      token\n    } = res.data;\n    localStorage.setItem('jwtToken', token);\n    setAuthHeader(token);\n    dispatch(getCurrentUser());\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const registerUser = (userData, history) => dispatch => {\n  axios.post('http://localhost:5000/api/users/register', userData).then(res => history.push('/login')).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const getCurrentUser = () => dispatch => {\n  axios.get('http://localhost:5000/api/users').then(res => dispatch(setCurrentUser(res.data)));\n};\nexport const setCurrentUser = data => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: data\n  };\n};","map":{"version":3,"names":["GET_ERRORS","axios","loginUser","userData","dispatch","post","then","res","token","data","localStorage","setItem","setAuthHeader","getCurrentUser","catch","err","type","payload","response","registerUser","history","push","get","setCurrentUser","SET_CURRENT_USER"],"sources":["D:/twitter-clone/client/src/actions/authActions.js"],"sourcesContent":["import {GET_ERRORS} from '../constants'\r\nimport axios from 'axios'\r\n\r\nexport const loginUser = (userData) => dispatch => {\r\n\taxios.post('http://localhost:5000/api/users/login', userData)\r\n\t\t.then(res => {\r\n\t\t\tconst { token } = res.data \r\n\t\t\tlocalStorage.setItem('jwtToken', token)\r\n\t\t\tsetAuthHeader(token)\r\n\t\t\tdispatch(getCurrentUser())\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_ERRORS,\r\n\t\t\t\tpayload: err.response.data\r\n\t\t\t})\r\n\t\t})\r\n}\r\n\r\nexport const registerUser = (userData, history) => dispatch => {\r\n\taxios.post('http://localhost:5000/api/users/register', userData)\r\n\t\t.then(res => history.push('/login'))\r\n\t\t.catch(err => dispatch({\r\n\t\t\ttype: GET_ERRORS,\r\n\t\t\tpayload: err.response.data\r\n\t\t}))\r\n}\r\n\r\nexport const getCurrentUser = () => dispatch => {\r\n\taxios.get('http://localhost:5000/api/users')\r\n\t\t.then(res => dispatch(setCurrentUser(res.data)))\r\n}\r\n\r\nexport const setCurrentUser = (data) => {\r\n\treturn {\r\n\t\ttype: SET_CURRENT_USER,\r\n\t\tpayload: data\r\n\t}\r\n}\r\n"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,cAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAIC,QAAD,IAAcC,QAAQ,IAAI;EAClDH,KAAK,CAACI,IAAN,CAAW,uCAAX,EAAoDF,QAApD,EACEG,IADF,CACOC,GAAG,IAAI;IACZ,MAAM;MAAEC;IAAF,IAAYD,GAAG,CAACE,IAAtB;IACAC,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,KAAjC;IACAI,aAAa,CAACJ,KAAD,CAAb;IACAJ,QAAQ,CAACS,cAAc,EAAf,CAAR;EACA,CANF,EAOEC,KAPF,CAOQC,GAAG,IAAI;IACbX,QAAQ,CAAC;MACRY,IAAI,EAAEhB,UADE;MAERiB,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaT;IAFd,CAAD,CAAR;EAIA,CAZF;AAaA,CAdM;AAgBP,OAAO,MAAMU,YAAY,GAAG,CAAChB,QAAD,EAAWiB,OAAX,KAAuBhB,QAAQ,IAAI;EAC9DH,KAAK,CAACI,IAAN,CAAW,0CAAX,EAAuDF,QAAvD,EACEG,IADF,CACOC,GAAG,IAAIa,OAAO,CAACC,IAAR,CAAa,QAAb,CADd,EAEEP,KAFF,CAEQC,GAAG,IAAIX,QAAQ,CAAC;IACtBY,IAAI,EAAEhB,UADgB;IAEtBiB,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaT;EAFA,CAAD,CAFvB;AAMA,CAPM;AASP,OAAO,MAAMI,cAAc,GAAG,MAAMT,QAAQ,IAAI;EAC/CH,KAAK,CAACqB,GAAN,CAAU,iCAAV,EACEhB,IADF,CACOC,GAAG,IAAIH,QAAQ,CAACmB,cAAc,CAAChB,GAAG,CAACE,IAAL,CAAf,CADtB;AAEA,CAHM;AAKP,OAAO,MAAMc,cAAc,GAAId,IAAD,IAAU;EACvC,OAAO;IACNO,IAAI,EAAEQ,gBADA;IAENP,OAAO,EAAER;EAFH,CAAP;AAIA,CALM"},"metadata":{},"sourceType":"module"}